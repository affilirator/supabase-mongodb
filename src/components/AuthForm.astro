---
const { type } = Astro.props;
---

<div class="min-h-screen bg-gradient-to-br from-primary via-secondary to-accent flex items-center justify-center p-4">
  <div class="bg-white rounded-lg shadow-xl p-8 w-full max-w-md">
    <h2 class="text-3xl font-bold text-gray-800 mb-6 text-center">
      {type === 'login' ? 'Login' : 'Register'}
    </h2>
    <form id="authForm" class="space-y-4">
      <div>
        <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
        <input
          type="email"
          id="email"
          name="email"
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50"
          required
        />
      </div>
      <div>
        <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
        <input
          type="password"
          id="password"
          name="password"
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50"
          required
        />
      </div>
      <button
        type="submit"
        class="w-full bg-primary text-white rounded-md py-2 px-4 hover:bg-primary/90 transition duration-200"
      >
        {type === 'login' ? 'Sign In' : 'Sign Up'}
      </button>
    </form>
    <p class="mt-4 text-center text-sm text-gray-600">
      {type === 'login' 
        ? "Don't have an account? " 
        : "Already have an account? "}
      <a
        href={type === 'login' ? '/register' : '/login'}
        class="text-primary hover:text-primary/90"
      >
        {type === 'login' ? 'Register' : 'Login'}
      </a>
    </p>
  </div>
</div>

<script>
  const form = document.getElementById('authForm');
  const isLogin = window.location.pathname === '/login';

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target as HTMLFormElement);
    const email = formData.get('email') as string;
    const password = formData.get('password') as string;

    try {
      const response = await fetch(isLogin ? '/api/login' : '/api/register', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email, password }),
      });

      if (response.ok) {
        window.location.href = '/dashboard';
      } else {
        alert('Authentication failed');
      }
    } catch (error) {
      console.error('Error:', error);
      alert('An error occurred');
    }
  });
</script>